pipeline {
   agent any
   tools {
         maven "Maven 3.8.6"
         //maven
   }
   
   stages {
      stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Install Dependencies') {
            environment {
                PATH = "/usr/local/bin:${PATH}"
            }
            steps {
                sh 'php -v'
                sh 'php -r "copy(\'https://getcomposer.org/installer\', \'composer-setup.php\');"'
                sh 'php composer-setup.php --install-dir=/usr/local/bin --filename=composer'
                sh 'composer install'
            }
        }
        stage('Build') {
            steps {
                sh 'php artisan build'
            }
        }
        stage('Test') {
            steps {
                sh 'php artisan test'
            }
        }
      stage( 'Build Artifact') {
         steps {
          sh "mvn clean package -DskipTests=true" 
           archive 'target/*.jar'
          }
      }
      stage('Test Maven JUnit') {
         steps {
           sh "mvn test"
         }
         post{
           always{
              junit (
                    allowEmptyResults:true,
                    testResults:'*test-reports/.xml'
                    )
            }
         }
      }
     stage('Sonarqube Analysis - SAST') {
         steps {
               withSonarQubeEnv('SonarQube') {
          sh "mvn clean verify sonar:sonar \
                -Dsonar.projectKey=aditi_project \
                 -Dsonar.projectName='aditi_project' \
                  -Dsonar.host.url=http://13.127.156.137:9000"
               }
           }
        }
       stage('Deploy') {
            steps {
                sh 'php artisan deploy'
            }
        }
       

    
        }
     }     
